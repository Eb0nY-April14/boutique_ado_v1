html {
    /*  This will allow our h100 classes in vertical centering to work.*/
    height: 100%;
}

body {
    /* This will add the background image to the body element using the size of cover & 
    options of 'no-repeat center centre fixed'. This will ensure that the image stays put 
    in the centre of the page. */
    background: url('/media/homepage_background_cropped.jpg') no-repeat center center fixed;
    background-size: cover;
    /* We'll add a height calculation to the body element which will be 100vh minus 164 pixels 
    which is the eventual height of our top header. */
    height: calc(100vh - 164px);
    color: #555;
    font-family: 'Lato';
}

/* This icon class was taken from another CSS framework similar to bootstrap called Bulma
& it will ensure that whenever we use font awesome icons, they will always stay perfectly 
centred and have a consistent size unless we manually change it. */
.icon {
    align-items: center;
    display: inline-flex;
    justify-content: center;
    height: 1.5rem;
    width: 1.5rem;
}

.logo-font {
    text-transform: uppercase;
}

/* This class ensures that the logo only takes up as much space as the text requires & no more. */
.main-logo-link {
    width: fit-content;
}

/* The next 3 blocks of css rule will be used consistently for buttons so that they match the 
theme of the shop now button on the homepage. */
.shop-now-button {
    background: black;
    color: white;
    min-width: 260px;
}

.btn-black {
    background: black;
    color: white;
}

.btn-outline-black {
    background: white;
    color: black !important; /* use important to override link colors for <a> elements */
    border: 1px solid black;
}

.shop-now-button:hover,
.shop-now-button:active,
.shop-now-button:focus,
.btn-black:hover,
.btn-black:active,
.btn-black:focus {
    background: #222;
    color: white !important;
}

/* We've added the text-black & border-black classes similar to bootstrap's colour helper 
classes like 'text success', 'text info' etc. Bootstrap doesn't actually have a black class 
as at the time of this recording so we are using the one created by the tutor & has been 
marked as important because we want elements using these classes to obey them.
These classes will allow us to have both primary and secondary call-to-action styling
on all site buttons which gives our users a consistent user experience. */
.text-black {
    color: #000 !important;
}

.border-black {
    border: 1px solid black !important;
}

.bg-black {
    background: #000 !important;
}

.overlay {
	height: 100%;
	width: 100%;
	top: 0;
	left: 0;
	position: fixed; /*Fixed at the top left of the screen.*/
	background: white;
	z-index: -1; /* This ensures that the image sits behind all the content. */
}

a.category-badge > span.badge:hover {
    background: #212529 !important;
    color: #fff !important;
}

/* 2 CSS classes below are for styling back to top button.
This will set a static width, height & position in the bottom 
right of the screen. */
.btt-button {
    height: 42px;
    width: 42px;
    position: fixed;
    bottom: 10px;
    right: 10px;
}

/* This makes the cursor into a pointer. */
.btt-link,
.update-link,
.remove-item {
    cursor: pointer;
}

/* We'll also update the search boxes placeholder to match that
same color of the other placeholderssince it's the only one now 
that doesn't match. */
input[name='q']::placeholder {
    color: #aab7c4;
}

/* ------------------------------- bootstrap toasts */
/* This CSS below will position the message container in the upper right of  
the screen & give it a high Z index so it's always on top of everything else. */

.message-container {
    position: fixed;
    top: 72px;
    right: 15px;
    z-index: 99999999999;
}

.custom-toast {
    overflow: visible;
}

.toast-capper {
    height: 2px;
}

/* from CSS-tricks.com: https://css-tricks.com/snippets/css/css-triangle/ */
.arrow-up {
    width: 0; 
    height: 0; 
    border-left: 4px solid transparent;
    border-right: 4px solid transparent; 
    border-bottom: 10px solid black;
    position: absolute;
    top: -10px;
    right: 36px;
}

/* Convenience classes - colors copied from Bootstrap */
.arrow-primary {
    border-bottom-color: #007bff !important;
}

.arrow-secondary {
    border-bottom-color: #6c757d !important;
}

.arrow-success {
    border-bottom-color: #28a745 !important;
}

.arrow-danger {
    border-bottom-color: #dc3545 !important;
}

.arrow-warning {
    border-bottom-color: #ffc107 !important;
}

.arrow-info {
    border-bottom-color: #17a2b8 !important;
}

.arrow-light {
    border-bottom-color: #f8f9fa !important;
}

.arrow-dark {
    border-bottom-color: #343a40 !important;
}

/* This whole div class will have a max height of 100px, an horizontal overflow of 'hidden'
& a vertical overflow that turns into a scrollbar when the height is greater than 100px. */
.bag-notification-wrapper {
    height: 100px;
    overflow-x: hidden;
    overflow-y: auto;
}


/* -------------------------------- Media Queries */

/* Slightly larger container on xl screens */
@media (min-width: 1200px) {
  .container {
    max-width: 80%;
  }
}

/* Allauth form formatting */

/* Here, we'll give all paragraphs in the inner content div a 
top margin & same colour as bootstraps text secondary. */
.allauth-form-inner-content p {
    margin-top: 1.5rem; /* mt-4 */
    color: #6c757d; /* text-secondary */
}

/* We'll make all inputs have black borders & a zero border-radius. */
.allauth-form-inner-content input {
    border-color: #000;
    border-radius: 0;
}

/* This'll hide the labels on all except for the 'remember me' checkbox 
on the login page since all the other inputs will have placeholders */
.allauth-form-inner-content label:not([for='id_remember']) {
    display: none;
}

/* This'll ensure that all the placeholders have the same colour as 
the rest of the site. */
.allauth-form-inner-content input::placeholder {
    color: #aab7c4;
}

/* We'll update all the forms buttons & the link colour */
.allauth-form-inner-content button,
.allauth-form-inner-content input[type='submit'] {
	/* btn */
	display: inline-block;
    font-weight: 400;
    color: #fff;
    text-align: center;
    vertical-align: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-color: #000;
    border: 1px solid #000;
    padding: .375rem .75rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0;

    /* standard bootstrap btn transitions */
    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}

.allauth-form-inner-content button:hover,
.allauth-form-inner-content input[type='submit']:hover {	
	color: #fff;
    background-color: #222;
    border-color: #222;
}

.allauth-form-inner-content a {
	color: #17a2b8; /* text-info */
}


/* Product Form */
/* This sets the overflow of the span wrapped around our file input 
to hidden & give it relative positioning. */
.btn-file {
    position: relative;
    overflow: hidden;
}

/*  We'll position the actual input absolutely in the top right of the span element
& give it a min-width & height of 100% so it takes up the entire span, then give it 
0 opacity so it doesn't cover the button. Here, we are ensuring that the entire
input which is clickable lives inside this span that looks like a button. */
.btn-file input[type="file"] {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 100%;
    min-height: 100%;
    opacity: 0;
    cursor: pointer;
}

/* Then, here below, we'll make it invisible so it appears one is clicking the button.
custom checkbox. We'll also make the custom checkbox red to match bootstrap's danger 
class & take off the border-radius. */
.custom-checkbox .custom-control-label::before {
    border-radius: 0;
    border-color: #dc3545;
}

.custom-checkbox .custom-control-input:checked~.custom-control-label::before {
    background-color: #dc3545;
    border-color: #dc3545;
    border-radius: 0;
}


/* fixed top navbar only on medium and up */
@media (min-width: 992px) {
    .fixed-top-desktop-only {
        position: fixed;
        top: 0;
        right: 0;
        left: 0;
        z-index: 1030;
    }

    .header-container {
        padding-top: 164px;
    }
}

/* pad the top a bit when navbar is collapsed on mobile */
@media (max-width: 991px) {
    .header-container {
        padding-top: 116px;
    }

    body {
        height: calc(100vh - 116px);
    }
}